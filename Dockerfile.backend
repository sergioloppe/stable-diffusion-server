# Start from the NVIDIA CUDA base image for Ubuntu 20.04
# docker build --rm -f Dockerfile.backend -t sd-backend --build-arg HF_TOKEN=${HF_TOKEN} .
# docker run --gpus all -p 8080:8080 -v ~/.cache/huggingface:/root/.cache/huggingface sd-server
FROM nvidia/cuda:12.4.1-base-ubuntu20.04

RUN apt update
ENV DEBIAN_FRONTEND=noninteractive

RUN apt -o Acquire::AllowInsecureRepositories=true -o Acquire::AllowDowngradeToInsecureRepositories=true update

RUN apt-get install --no-install-recommends -y \
    curl \
    wget \
    gcc \
    sudo \
    unzip

RUN apt-get install --no-install-recommends -y \
    python3.9 \
    python3.9-venv \
    python3.9-dev \
    python3-pip

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 2
RUN python3.9 -m pip install --upgrade pip
RUN sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1

RUN rm -rf /var/lib/apt/lists/*
RUN apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

WORKDIR /app
COPY ./backend .

# Create a virtual environment in the container
RUN python3 -m venv .venv

# Activate the virtual environment
ENV PATH="/app/.venv/bin:$PATH"

WORKDIR /app
RUN pip install -r requirements.txt
ENV FLASK_CONFIG=development

# Copy you huggingface token
ARG HF_TOKEN=no_token_provided
ARG HF_MODEL=stabilityai/stable-diffusion-2-1
RUN python3 -c "from huggingface_hub import HfFolder; HfFolder.save_token('${HF_TOKEN}')"

EXPOSE 8080
# CMD ["gunicorn", "-w", "4", "-b", ":8080", "app:app"]
# ENTRYPOINT ["tail", "-f", "/dev/null"]
CMD flask run -h 0.0.0.0 -p 8080